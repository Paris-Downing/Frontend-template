{"ast":null,"code":"import { Tutorial } from 'src/app/models/tutorial.model';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tutorial.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n\nfunction QuestionsComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"h1\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"h4\", 5);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 3)(11, \"div\", 6)(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_0_div_1_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.nextQuestion());\n    });\n    i0.ɵɵtext(13, \" Next Question \");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.questionText);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.answerText);\n  }\n}\n\nfunction QuestionsComponent_div_0_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 11);\n    i0.ɵɵtext(2, \"Translate this to Pashto:\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction QuestionsComponent_div_0_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 11);\n    i0.ɵɵtext(2, \"Translate this to English:\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction QuestionsComponent_div_0_div_2_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_0_div_2_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r10.verifyAnswer());\n    });\n    i0.ɵɵtext(1, \" Verify \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r8.textbox1 === \"\");\n  }\n}\n\nfunction QuestionsComponent_div_0_div_2_div_17_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.answerText);\n  }\n}\n\nfunction QuestionsComponent_div_0_div_2_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, QuestionsComponent_div_0_div_2_div_17_p_2_Template, 2, 1, \"p\", 0);\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_0_div_2_div_17_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.nextQuestion());\n    });\n    i0.ɵɵtext(5, \" Next Question \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.alertType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.alertMessage, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.alertType === \"alert-danger\" || ctx_r9.alertType === \"alert-warning\");\n  }\n}\n\nfunction QuestionsComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵtemplate(3, QuestionsComponent_div_0_div_2_div_3_Template, 3, 0, \"div\", 0);\n    i0.ɵɵtemplate(4, QuestionsComponent_div_0_div_2_div_4_Template, 3, 0, \"div\", 0);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 9)(6, \"div\", 10)(7, \"h2\", 11);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 12)(10, \"div\", 3)(11, \"textarea\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionsComponent_div_0_div_2_Template_textarea_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.textbox1 = $event);\n    });\n    i0.ɵɵtext(12, \"                \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 9)(14, \"div\", 3)(15, \"div\", 6);\n    i0.ɵɵtemplate(16, QuestionsComponent_div_0_div_2_button_16_Template, 2, 1, \"button\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(17, QuestionsComponent_div_0_div_2_div_17_Template, 6, 3, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentQuestionType === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentQuestionType === 2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.questionText);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.textbox1)(\"disabled\", ctx_r3.textboxLocked);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.showAlert);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showAlert);\n  }\n}\n\nfunction QuestionsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, QuestionsComponent_div_0_div_1_Template, 14, 2, \"div\", 0);\n    i0.ɵɵtemplate(2, QuestionsComponent_div_0_div_2_Template, 18, 7, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoaded && ctx_r0.currentQuestionType === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoaded && ctx_r0.currentQuestionType === 1 || ctx_r0.currentQuestionType === 2);\n  }\n}\n\nfunction QuestionsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 11);\n    i0.ɵɵtext(2, \"CONGRATULATIONS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 3)(5, \"div\", 6)(6, \"button\", 18);\n    i0.ɵɵtext(7, \" Continue \");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@fade\", undefined);\n  }\n}\n\nexport let QuestionsComponent = /*#__PURE__*/(() => {\n  class QuestionsComponent {\n    /*\r\n    TO-DO!!!\r\n    0) See issues in ChapterComponent\r\n    1) Add variable to act as a checkpoint for the queue\r\n    2) Accept multiple correct answers\r\n    3) Questions and answers w/ Arabic script\r\n    4) fix side overline\r\n    5) Should I make each word look-able up-able?\r\n    6) Clicking on backbutton or home button = do you want to leave this lesson? Your progress will not be saved\r\n    */\n    constructor(tutorialService) {\n      this.tutorialService = tutorialService;\n      this.currentQuestion = 0;\n      this.tutorials = [];\n      this.answerText = '';\n      this.currentQuestionType = 1;\n      this.textbox1 = '';\n      this.sampleString = '$co#mo es$tas#, mi a$mi#go?';\n      this.alertType = \"alert-success\"; //success, warning, danger\n\n      this.alertMessage = \"That's correct!\";\n      this.showAlert = false;\n      this.incorrectQuestions = [];\n      this.isLoaded = false;\n      this.textboxLocked = false;\n      this.endOfLesson = false;\n      this.escapedCharacters = [' ', ',', '.', '?'];\n    }\n\n    ngOnInit() {\n      this.parseTones();\n      this.retrieveTutorials();\n    }\n\n    retrieveTutorials() {\n      this.tutorialService.get().subscribe(data => {\n        this.tutorials = data;\n        this.isLoaded = true;\n        this.nextQuestion(); // console.log(data);\n      }, error => {\n        console.log(error);\n      });\n    } //formats the text so pitch can be marked\n    //returns answer text without $ and #\n\n\n    parseTones() {\n      let myReturn = this.sampleString.replace(/\\$/gi, \"\");\n      myReturn = this.sampleString.replace(/\\#/gi, \"\"); // $co#mo\n      // <o></o><u>co</u><o>mo</u>\n      // <span style='text-decoration: overline;'>\n\n      this.sampleString = this.sampleString.replace(/\\$/gi, \"</u><span>\"); //start of high pitch\n\n      this.sampleString = this.sampleString.replace(/\\#/gi, \"</span><u>\"); //start of low pitch\n\n      this.escapedCharacters.forEach(escChar => {\n        var re = new RegExp(`\\\\${escChar}`, \"gi\");\n        this.sampleString = this.sampleString.replace(re, `</u>${escChar}<u>`);\n      });\n      this.sampleString = \"<u>\" + this.sampleString + \"</u>\";\n      return myReturn;\n    }\n\n    checkAnswer() {\n      var _a, _b; //1) Removes punctuation\n\n\n      let modifiedSentence1 = (_a = this.answerText) === null || _a === void 0 ? void 0 : _a.replace(/[.,\\/#!?$%\\^&\\*;:{}=\\-_`~()]/g, \"\");\n      let modifiedSentence2 = (_b = this.textbox1) === null || _b === void 0 ? void 0 : _b.replace(/[.,\\/#!?$%\\^&\\*;:{}=\\-_`~()]/g, \"\"); //2) Removes capitalization\n\n      modifiedSentence1 = modifiedSentence1 === null || modifiedSentence1 === void 0 ? void 0 : modifiedSentence1.toLowerCase();\n      modifiedSentence2 = modifiedSentence2 === null || modifiedSentence2 === void 0 ? void 0 : modifiedSentence2.toLowerCase();\n      if (modifiedSentence1 === undefined || modifiedSentence2 === undefined) return 100; //3) Removes extra spacing\n\n      const sentence1 = modifiedSentence1.replace(/  +/g, ' ');\n      const sentence2 = modifiedSentence2.replace(/  +/g, ' '); //4) Accepts 1 missing letter, 1 extra letter, 1 incorrect letter \n\n      return this.checkSentence(sentence1, sentence2, 1);\n    }\n\n    checkSentence(sentence1, sentence2, mistakesAllowed) {\n      if (sentence1.length === sentence2.length) {\n        if (sentence1 === sentence2) {\n          // console.log(\"ERROR TYPE 1\"); //both sentences are the same\n          return 0;\n        } else {\n          for (let i = 0; i < sentence1.length; i++) {\n            if (sentence1.charAt(i) != sentence2.charAt(i)) {\n              mistakesAllowed--;\n\n              if (mistakesAllowed < 0) {\n                // console.log(\"ERROR TYPE 2\");  //a word had at least 2 wrong letters\n                return 1;\n              }\n            }\n          } // console.log(\"ERROR TYPE 3\"); //a letter was typed wrong/without an accent\n\n\n          return .5;\n        }\n      } else if (sentence1.length + 1 === sentence2.length || sentence2.length + 1 === sentence1.length) {\n        for (let i = 0, j = 0; i < sentence1.length || j < sentence2.length; i++, j++) {\n          if (sentence1.charAt(i) != sentence2.charAt(i)) {\n            mistakesAllowed--;\n\n            if (mistakesAllowed < 0) {\n              // console.log(\"ERROR TYPE 4\");  //there were too many extra or missing letters\n              return 1;\n            }\n\n            if (sentence1.length + 1 === sentence2.length) {\n              j++;\n            } else {\n              i++;\n            }\n          }\n        } // console.log(\"ERROR TYPE 5\");\n\n\n        return .5; //there was only one missing or extra letter\n      } else {\n        // console.log(\"ERROR TYPE 6\");  //the words didn't match at all\n        return 1;\n      }\n    }\n\n    verifyAnswer() {\n      this.textboxLocked = true;\n      let amountOfMistakes = this.checkAnswer();\n      this.showAlert = true; //set to false when continue button is pressed\n\n      if (amountOfMistakes >= 1) {\n        this.alertType = \"alert-danger\";\n        this.alertMessage = \"Incorrect!\";\n        this.incorrectQuestions.unshift(this.currentQuestion);\n      } else if (amountOfMistakes > 0) {\n        this.alertType = \"alert-warning\";\n        this.alertMessage = \"Correct!\";\n      } else {\n        this.alertType = \"alert-success\";\n        this.alertMessage = \"Correct!\";\n      } // this.nextQuestion();\n\n    }\n\n    nextQuestion() {\n      this.textbox1 = '';\n      this.textboxLocked = false;\n      this.showAlert = false;\n      let text = new Tutorial();\n      console.log(\"TUROTIRALSDF:SD:\", this.tutorials);\n      console.log(\"PRASHNNN\", this.incorrectQuestions);\n      console.log(\"CUURRR\", this.currentQuestion); //decides what the next question is\n\n      if (this.tutorials !== undefined) {\n        // 1. question exists, show it\n        if (this.tutorials[this.currentQuestion] !== undefined) text = this.tutorials[this.currentQuestion]; // 2. if new question doesn't exist, check incorrect question\n        else if (this.incorrectQuestions.length > 0) {\n          const currQ = this.incorrectQuestions.pop();\n          if (currQ !== undefined) text = this.tutorials[currQ];\n        } // 3. if both new and incorrect question doesn't exist, show end\n        else this.endOfLesson = true; //sets the questionText, answerText, and questionType for current question\n\n        this.questionText = text.question !== undefined ? text.question : ''; // if(text.answers !== undefined) {\n\n        this.answerText = text.answers; // this.checkAnswer(); \n        // }\n        // if(text.questionType !== undefined) {\n\n        this.currentQuestionType = text.questionType; // }\n      } //gets the index of the current question\n\n\n      this.currentQuestion++;\n    }\n\n  }\n\n  QuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n    return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.TutorialService));\n  };\n\n  QuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionsComponent,\n    selectors: [[\"app-questions\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"container\", 4, \"ngIf\"], [1, \"row\", \"justify-content-md-center\"], [1, \"col\", \"col-lg-6\"], [2, \"text-align\", \"center\", \"padding-top\", \"10px\"], [2, \"text-align\", \"center\", \"color\", \"gray\", \"padding-bottom\", \"40px\"], [1, \"center\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"container\"], [1, \"row\", \"justify-content-md-center\", \"pad\"], [1, \"col\", \"col-lg-4\"], [2, \"text-align\", \"center\"], [1, \"row\", \"justify-content-md-center\", \"pad\", 2, \"padding-bottom\", \"40px\"], [\"input\", \"text\", \"id\", \"textbox1\", \"rows\", \"6\", \"placeholder\", \"Write something here...\", 1, \"form-control\", \"z-depth-1\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"class\", \"btn btn-success\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"uib-alert\", \"\", \"class\", \"rounded\", \"style\", \"text-indent: 10px;\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"uib-alert\", \"\", 1, \"rounded\", 2, \"text-indent\", \"10px\", 3, \"ngClass\"], [\"routerLink\", \"/chapters\", 1, \"btn\", \"btn-success\"]],\n    template: function QuestionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, QuestionsComponent_div_0_Template, 3, 2, \"div\", 0);\n        i0.ɵɵtemplate(1, QuestionsComponent_div_1_Template, 8, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.endOfLesson);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.endOfLesson);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i3.RouterLink, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\".center{margin:0 auto;display:block;text-align:center}.pad{padding-bottom:20px}em{text-decoration:overline;font-style:normal}div.tone span{border-top:solid 2px black;border-right:solid 2px black;margin-right:1px;display:inline-block;line-height:1}bar{border-left:1px solid #000;height:15px}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('fade', [transition('void => *', [style({\n        opacity: 0\n      }), animate(2000, style({\n        opacity: 1\n      }))])])]\n    }\n  });\n  return QuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}